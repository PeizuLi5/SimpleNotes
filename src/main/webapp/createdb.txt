CREATE TABLE users (username VARCHAR(25) PRIMARY KEY, password VARCHAR(20) NOT NULL);
CREATE TABLE userQuestion (username VARCHAR(25), question VARCHAR(100), answer VARCHAR(50) NOT NULL, PRIMARY KEY(username, question), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE);
CREATE TABLE notes (Nid NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1), title VARCHAR(255), content CLOB, PRIMARY KEY(Nid));
CREATE TABLE share_notes (Nid INTEGER, share_user VARCHAR(25), PRIMARY KEY(Nid, share_user), FOREIGN KEY(share_user) REFERENCES users(username) ON DELETE CASCADE,FOREIGN KEY(Nid) REFERENCES notes(Nid) ON DELETE CASCADE);
CREATE TABLE author (username VARCHAR(25), Nid INTEGER, PRIMARY KEY(username, Nid), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE, FOREIGN KEY(Nid) REFERENCES notes(Nid) ON DELETE CASCADE);
CREATE TABLE contain (username VARCHAR(25), Nid INTEGER, PRIMARY KEY(username, Nid), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE, FOREIGN KEY(Nid) REFERENCES notes(Nid) ON DELETE CASCADE);
CREATE TABLE important (username VARCHAR(25), Nid INTEGER, PRIMARY KEY(username, Nid), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE, FOREIGN KEY(Nid) REFERENCES notes(Nid) ON DELETE CASCADE);
CREATE TABLE edit_time (Nid INTEGER, edit_time TIMESTAMP, PRIMARY KEY(Nid, edit_time), FOREIGN KEY(Nid) REFERENCES notes(Nid) ON DELETE CASCADE);
CREATE TABLE login (username VARCHAR(25), login_id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1), dates TIMESTAMP, PRIMARY KEY(username, login_id), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE);
CREATE TABLE logout (username VARCHAR(25), logout_id NUMBER GENERATED ALWAYS as IDENTITY(START with 1 INCREMENT by 1), dates TIMESTAMP, PRIMARY KEY(username, logout_id), FOREIGN KEY(username) REFERENCES users(username) ON DELETE CASCADE);